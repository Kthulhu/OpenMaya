OpenShadingLanguage 1.00
# Compiled by oslc 1.6.0dev
shader as_normal_map
param	color	Color	0 0 0 		 %read{8,8} %write{0,0}
param	vector	Normal	0 0 0 		 %read{19,35} %write{1,1}
param	vector	Tangent	0 0 0 		 %read{18,18} %write{2,2}
param	string	UpVector	"Blue" 		%meta{string,help,"Color channel to use as up direction"} %meta{string,widget,"popup"} %meta{string,options,"Green|Blue"}  %read{12,12} %write{2147483647,-1}
param	string	Space	"Tangent" 		%meta{string,widget,"popup"} %meta{string,options,"Tangent|Object|World"}  %read{20,23} %write{2147483647,-1}
param	float	Amount	1 		%meta{float,min,0} %meta{float,max,1}  %read{33,35} %write{2147483647,-1}
oparam	vector	NormalOut	0 0 0 		 %read{38,38} %write{36,37}
oparam	vector	TangentOut	0 0 0 		 %read{2147483647,-1} %write{39,39}
global	normal	N	 %read{1,1} %write{2147483647,-1}
global	vector	dPdu	 %read{2,2} %write{2147483647,-1}
local	normal	n	 %read{14,37} %write{11,32}
local	float	___300_tmp	 %read{17,17} %write{14,14}
local	vector	t	 %read{19,26} %write{18,18}
local	vector	b	 %read{28,38} %write{19,19}
const	color	$const1	0 0 0		 %read{0,0} %write{2147483647,-1}
temp	color	$tmp1	 %read{11,11} %write{10,10}
const	float	$const3	-1		 %read{3,3} %write{2147483647,-1}
temp	color	$tmp2	 %read{10,10} %write{3,3}
const	int	$const4	1		 %read{15,27} %write{2147483647,-1}
const	float	$const5	1		 %read{4,33} %write{2147483647,-1}
temp	color	$tmp3	 %read{10,10} %write{4,4}
temp	color	$tmp4	 %read{10,10} %write{9,9}
const	int	$const6	0		 %read{25,25} %write{2147483647,-1}
const	float	$const7	0		 %read{5,5} %write{2147483647,-1}
temp	color	$tmp5	 %read{9,9} %write{5,5}
temp	color	$tmp6	 %read{8,8} %write{6,6}
const	string	$const8	"clamp"		 %read{7,7} %write{2147483647,-1}
temp	color	$tmp7	 %read{9,9} %write{8,8}
const	string	$const9	"Green"		 %read{12,12} %write{2147483647,-1}
temp	int	$tmp8	 %read{13,13} %write{12,12}
const	int	$const10	2		 %read{14,30} %write{2147483647,-1}
temp	float	$tmp9	 %read{16,16} %write{15,15}
const	string	$const11	"Object"		 %read{20,20} %write{2147483647,-1}
temp	int	$tmp10	 %read{21,21} %write{20,20}
const	string	$const12	"object"		 %read{22,22} %write{2147483647,-1}
const	string	$const13	"world"		 %read{22,22} %write{2147483647,-1}
const	string	$const14	"Tangent"		 %read{23,23} %write{2147483647,-1}
temp	int	$tmp11	 %read{24,24} %write{23,23}
temp	float	$tmp12	 %read{26,26} %write{25,25}
temp	vector	$tmp13	 %read{29,29} %write{26,26}
temp	float	$tmp14	 %read{28,28} %write{27,27}
temp	vector	$tmp15	 %read{29,29} %write{28,28}
temp	vector	$tmp16	 %read{32,32} %write{29,29}
temp	float	$tmp17	 %read{31,31} %write{30,30}
temp	vector	$tmp18	 %read{32,32} %write{31,31}
temp	int	$tmp19	 %read{34,34} %write{33,33}
temp	point	$tmp20	 %read{36,36} %write{35,35}
temp	vector	$tmp21	 %read{39,39} %write{38,38}
code Color
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:35
#     vector Normal = N,
	assign		Color $const1 	%filename{"H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl"} %line{35} %argrw{"wr"}
code Normal
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:36
#     vector Tangent = APPLESEED_DEFAULT_TANGENT,
	assign		Normal N 	%filename{"H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl"} %line{36} %argrw{"wr"}
code Tangent
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:37
#     string UpVector = "Blue"
	normalize	Tangent dPdu 	%filename{"H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl"} %line{37} %argrw{"wr"}
code ___main___
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:57
# 
	assign		$tmp2 $const3 	%filename{"H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl"} %line{57} %argrw{"wr"}
	assign		$tmp3 $const5 	%argrw{"wr"}
	assign		$tmp5 $const7 	%argrw{"wr"}
	assign		$tmp6 $const5 	%argrw{"wr"}
	functioncall	$const8 10 	%argrw{"r"}
# H:/UserDatenHaggi\\Documents\\coding\\OpenMaya\\src\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h:156
# point  radians (point x)  { return x*(M_PI/180.0); }
	min		$tmp7 Color $tmp6 	%filename{"H:/UserDatenHaggi\\Documents\\coding\\OpenMaya\\src\\mayaToAppleseed\\mtap_devmodule\\shaders\\stdosl.h"} %line{156} %argrw{"wrr"}
	max		$tmp4 $tmp7 $tmp5 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:57
# 
	mix		$tmp1 $tmp2 $tmp3 $tmp4 	%filename{"H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl"} %line{57} %argrw{"wrrr"}
	assign		n $tmp1 	%argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:59
#     {
	eq		$tmp8 UpVector $const9 	%line{59} %argrw{"wrr"}
	if		$tmp8 18 18 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:61
#         n[2] = n[1];
	compref		___300_tmp n $const10 	%line{61} %argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:62
#         n[1] = tmp;
	compref		$tmp9 n $const4 	%line{62} %argrw{"wrr"}
	compassign	n $const10 $tmp9 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:63
#     }
	compassign	n $const4 ___300_tmp 	%line{63} %argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:66
#     vector b = cross(t, Normal);
	assign		t Tangent 	%line{66} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:67
# 
	cross		b t Normal 	%line{67} %argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:69
#     {
	eq		$tmp10 Space $const11 	%line{69} %argrw{"wrr"}
	if		$tmp10 23 33 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:71
#     }
	transformn	n $const12 $const13 n 	%line{71} %argrw{"wrrr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:73
#     {
	eq		$tmp11 Space $const14 	%line{73} %argrw{"wrr"}
	if		$tmp11 33 33 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:75
#     }
	compref		$tmp12 n $const6 	%line{75} %argrw{"wrr"}
	mul		$tmp13 $tmp12 t 	%argrw{"wrr"}
	compref		$tmp14 n $const4 	%argrw{"wrr"}
	mul		$tmp15 $tmp14 b 	%argrw{"wrr"}
	add		$tmp16 $tmp13 $tmp15 	%argrw{"wrr"}
	compref		$tmp17 n $const10 	%argrw{"wrr"}
	mul		$tmp18 $tmp17 Normal 	%argrw{"wrr"}
	add		n $tmp16 $tmp18 	%argrw{"wrr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:78
#         NormalOut = normalize(mix(Normal, n, Amount));
	neq		$tmp19 Amount $const5 	%line{78} %argrw{"wrr"}
	if		$tmp19 37 38 	%argrw{"r"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:79
#     else
	mix		$tmp20 Normal n Amount 	%line{79} %argrw{"wrrr"}
	normalize	NormalOut $tmp20 	%argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:81
# 
	normalize	NormalOut n 	%line{81} %argrw{"wr"}
# H:/UserDatenHaggi/Documents/coding/OpenMaya/src/mayaToAppleseed/mtap_devmodule/shaders\\src\\normal\\as_normal_map.osl:83
# }
	cross		$tmp21 NormalOut b 	%line{83} %argrw{"wrr"}
	normalize	TangentOut $tmp21 	%argrw{"wr"}
	end
